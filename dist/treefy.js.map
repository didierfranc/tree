{"version":3,"file":"treefy.js","sources":["../src/helpers/array.js","../node_modules/lodash.flattendeep/index.js","../src/index.js"],"sourcesContent":["const sortBy = (array, by) => array.sort((a, b) => (a[by] < b[by] ? -1 : 1))\n\nconst getChildren = (data, parent, parentKey, idKey, depth) => {\n  return {\n    ...parent,\n    children: data\n      .filter(item => item[parentKey] === parent[idKey])\n      .map(item => ({\n        ...item,\n        depth,\n        children: getChildren(data, item, parentKey, idKey, depth + 1),\n      })),\n  }\n}\n\nconst getChildrenArray = (data, parent, parentKey, idKey, depth) => {\n  return [\n    {...parent, depth},\n    [\n      data\n        .filter(item => item[parentKey] === parent[idKey])\n        .map(item =>\n          getChildrenArray(data, item, parentKey, idKey, depth + 1),\n        ),\n    ],\n  ]\n}\n\n\nmodule.exports = {\n  sortBy,\n  getChildren,\n  getChildrenArray,\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = flattenDeep;\n","const { sortBy, getChildren, getChildrenArray } = require('./helpers/array')\nconst flattenDeep = require('lodash.flattendeep')\n\nconst toTree = (data, parentKey = 'parent', idKey = 'id') => {\n  const root = data.filter(item => !item[parentKey])\n  const tree = root.map(item => getChildren(data, item, parentKey, idKey, 1))\n  return tree\n}\n\n\nconst toFlatTree = (data, parentKey = 'parent', idKey = 'id') => {\n  const root = data.filter(item => !item[parentKey])\n  const array = root.map(item =>\n    getChildrenArray(data, item, parentKey, idKey, 0)\n  )\n  return flattenDeep(array)\n}\n\nmodule.exports = {\n  toTree,\n  toFlatTree,\n}\n"],"names":["sortBy","array","by","sort","a","b","getChildren","data","parent","parentKey","idKey","depth","filter","item","map","getChildrenArray","INFINITY","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","freeGlobal","global","Object","freeSelf","self","root","Function","arrayPush","values","index","length","offset","objectProto","prototype","hasOwnProperty","objectToString","toString","Symbol","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","undefined","baseFlatten","predicate","isStrict","result","isFlattenable","value","isArray","isArguments","flattenDeep","isArrayLikeObject","call","Array","isArrayLike","isLength","isFunction","isObjectLike","tag","isObject","type","require$$0","toTree","toFlatTree"],"mappings":"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"}